[
  {
    "objectID": "EDA-practice-ST558.html",
    "href": "EDA-practice-ST558.html",
    "title": "EDA practice",
    "section": "",
    "text": "Read in the data and modify the code they had already provided.\n\nlibrary(tidyverse)\nmath&lt;-read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nport&lt;-read.table(\"student-por.csv\",sep=\";\",header=TRUE)\ncomb&lt;-inner_join(math,port, by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(comb)) # 382 students\n\n[1] 382\n\n\nAfter using inner_join instead of merge, received a warning that there were multiple rows of x that matched in y and y that matched in x. This warning tells us that the keys provided were not unique and produces a many-to-many relationship. Essentially we had repeated observations throughout. In terms of this data set there is data on the same students who took math as well as Portuguese.\nUse an inner_join on all variables except G1,G2,G3, paid and absences. Created other_vars with all of the variables we needed.\n\nother_vars&lt;- colnames(math)[!colnames(math) %in% c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")]\ncomb_main&lt;- inner_join(math,port, by=other_vars)\n\nprint(nrow(comb_main))\n\n[1] 320\n\n\nFor all 3 data frames change 4 of the categorical variables to factors.\n\n #Choosing (address,famsize,Pstatus,school)\nmath |&gt;\n  mutate(address=as.factor(address),\n         famsize=as.factor(famsize),\n         Pstatus=as.factor(Pstatus),\n         school=as.factor(school))\n#repeat for the other data frames \nport |&gt;\n  mutate(address=as.factor(address),\n         famsize=as.factor(famsize),\n         Pstatus=as.factor(Pstatus),\n         school=as.factor(school))\ncomb_main |&gt;\n  mutate(address=as.factor(address),\n         famsize=as.factor(famsize),\n         Pstatus=as.factor(Pstatus),\n         school=as.factor(school))"
  },
  {
    "objectID": "EDA-practice-ST558.html#task-1-read-in-data-and-modify",
    "href": "EDA-practice-ST558.html#task-1-read-in-data-and-modify",
    "title": "EDA practice",
    "section": "",
    "text": "Read in the data and modify the code they had already provided.\n\nlibrary(tidyverse)\nmath&lt;-read.table(\"student-mat.csv\",sep=\";\",header=TRUE)\nport&lt;-read.table(\"student-por.csv\",sep=\";\",header=TRUE)\ncomb&lt;-inner_join(math,port, by=c(\"school\",\"sex\",\"age\",\"address\",\"famsize\",\"Pstatus\",\"Medu\",\"Fedu\",\"Mjob\",\"Fjob\",\"reason\",\"nursery\",\"internet\"))\nprint(nrow(comb)) # 382 students\n\n[1] 382\n\n\nAfter using inner_join instead of merge, received a warning that there were multiple rows of x that matched in y and y that matched in x. This warning tells us that the keys provided were not unique and produces a many-to-many relationship. Essentially we had repeated observations throughout. In terms of this data set there is data on the same students who took math as well as Portuguese.\nUse an inner_join on all variables except G1,G2,G3, paid and absences. Created other_vars with all of the variables we needed.\n\nother_vars&lt;- colnames(math)[!colnames(math) %in% c(\"G1\",\"G2\",\"G3\",\"paid\",\"absences\")]\ncomb_main&lt;- inner_join(math,port, by=other_vars)\n\nprint(nrow(comb_main))\n\n[1] 320\n\n\nFor all 3 data frames change 4 of the categorical variables to factors.\n\n #Choosing (address,famsize,Pstatus,school)\nmath |&gt;\n  mutate(address=as.factor(address),\n         famsize=as.factor(famsize),\n         Pstatus=as.factor(Pstatus),\n         school=as.factor(school))\n#repeat for the other data frames \nport |&gt;\n  mutate(address=as.factor(address),\n         famsize=as.factor(famsize),\n         Pstatus=as.factor(Pstatus),\n         school=as.factor(school))\ncomb_main |&gt;\n  mutate(address=as.factor(address),\n         famsize=as.factor(famsize),\n         Pstatus=as.factor(Pstatus),\n         school=as.factor(school))"
  },
  {
    "objectID": "EDA-practice-ST558.html#task-2-summarize-the-data-very-basic-eda",
    "href": "EDA-practice-ST558.html#task-2-summarize-the-data-very-basic-eda",
    "title": "EDA practice",
    "section": "Task 2: Summarize the Data (Very Basic EDA)",
    "text": "Task 2: Summarize the Data (Very Basic EDA)\nCheck how the data is stored, look at the column data types and make sure they make sense as well as look at the structure of the data. Only using comb_main from now on.\nAfter looking at the variables, there is a list of variables that I feel would be better suited as factors rather than integers, this is because they are in ordinal bins from 1-5 and thus in categories with meaning. \n::: {.cell}\n\n```{.r .cell-code}\n#changing traveltime, studytime, failures, health, walc, dalc, gout,freetime and famrel to factors with levels to better represent the data.\ncomb_main &lt;- comb_main |&gt;\n  mutate(\n    traveltime = factor(traveltime,\n                         levels = 1:4,\n                         labels = c(\"&lt;15 min\", \"15–30 min\", \"30 min–1 hour\", \"&gt;1 hour\")),\n    studytime = factor(studytime,\n                        levels = 1:4,\n                        labels = c(\"&lt;2 hrs\", \"2–5 hrs\", \"5–10 hrs\", \"&gt;10 hrs\")),\n    failures = factor(failures,\n                      levels = 0:3,  # dataset codes 0,1,2,3 (3 = 3+)\n                      labels = c(\"none\", \"1\", \"2\", \"3+\")),\n    health = factor(health,\n                    levels = 1:5,\n                    labels = c(\"very bad\", \"bad\", \"average\", \"good\", \"very good\")),\n    Walc = factor(Walc,\n                  levels = 1:5,\n                  labels = c(\"very low\", \"low\", \"average\", \"high\", \"very high\")),\n    Dalc = factor(Dalc,\n                  levels = 1:5,\n                  labels = c(\"very low\", \"low\", \"average\", \"high\", \"very high\")),\n    goout = factor(goout,\n                   levels = 1:5,\n                   labels = c(\"very low\", \"low\", \"average\", \"high\", \"very high\")),\n    freetime = factor(freetime,\n                      levels = 1:5,\n                      labels = c(\"very low\", \"low\", \"average\", \"high\", \"very high\")),\n    famrel = factor(famrel,\n                    levels = 1:5,\n                    labels = c(\"very bad\", \"bad\", \"average\", \"good\", \"excellent\"))\n  )\n::: Using colSums to sum up the missing values in each variable.\n\ncolSums(is.na(comb_main))\n\nThere are no missing values in the combined data set.\n#Catagorical Variables\nCreate one-way,two-way and 3-way contigency tables for some of the factor variables from earlier.\n\n#one-way contingency table looking at school. \none_way &lt;- table(comb_main$school)\none_way\n\n\n GP  MS \n287  33 \n\n\nIn the combined data set there are 33 students that go to the school named Mousinho da Silveira\n\n#two-way contingency table looking at school and Pstatus. \ntwo_way &lt;- table(comb_main$school, comb_main$Pstatus)\ntwo_way\n\n    \n       A   T\n  GP  30 257\n  MS   1  32\n\n\nIn the combined data set there is 1 student that goes to Mousinho da Silveira whos parents are ‘Apart’.\n\nthree_way &lt;- table(comb_main$school, comb_main$Pstatus, comb_main$address)\nthree_way\n\n, ,  = R\n\n    \n       A   T\n  GP   5  43\n  MS   0  19\n\n, ,  = U\n\n    \n       A   T\n  GP  25 214\n  MS   1  13\n\n\nThere is 1 student that goes to Mousinho da Silveira whos parents are apart and lives at an Urban address. Creating a two-way table by subsetting the data with filter first.\n\nlibrary(dplyr)\nt_w_filt &lt;- comb_main |&gt;\n  dplyr::filter(address == \"U\") |&gt;\n  with(table(school, Pstatus, useNA = \"ifany\"))\nt_w_filt\n\n      Pstatus\nschool   A   T\n    GP  25 214\n    MS   1  13\n\n\nCreate a three-way table then subset it.\n\nt3 &lt;- with(comb_main, table(school, Pstatus, address, useNA = \"ifany\"))\nt_w_slice &lt;- t3[, , \"U\"]\nt_w_slice\n\n      Pstatus\nschool   A   T\n    GP  25 214\n    MS   1  13\n\n\nCreate a two-way contingency table using group_by() and summarize() from dplyr. Then use pivot_wider() to make the result look more like the output from table().\n\ntwo_way_tv &lt;- comb_main |&gt;\n  dplyr::filter(address == \"U\") |&gt;\n  tidyr::drop_na(school, Pstatus) |&gt;\n  dplyr::count(school, Pstatus, name = \"n\") |&gt;\n  tidyr::pivot_wider(names_from = Pstatus, values_from = n, values_fill = 0)\n\ntwo_way_tv\n\n# A tibble: 2 × 3\n  school     A     T\n  &lt;chr&gt;  &lt;int&gt; &lt;int&gt;\n1 GP        25   214\n2 MS         1    13\n\n\nCreate a stacked bar graph and a side-by-side bar graph. Give relevant x and y labels, and a title for the plots.\n\n# Stacked\ncomb_main |&gt;\n  dplyr::filter(address == \"U\") |&gt;\n  ggplot2::ggplot(ggplot2::aes(x = school, fill = Pstatus)) +\n  ggplot2::geom_bar() +\n  ggplot2::labs(\n    title = \"School vs Parent Status (Urban only)\",\n    x = \"School\", y = \"Count\", fill = \"Parent status\"\n  )\n\n\n\n\n\n\n\n# Side-by-side\ncomb_main |&gt;\n  dplyr::filter(address == \"U\") |&gt;\n  ggplot2::ggplot(ggplot2::aes(x = school, fill = Pstatus)) +\n  ggplot2::geom_bar(position = ggplot2::position_dodge(width = 0.8)) +\n  ggplot2::labs(\n    title = \"School vs Parent Status (Urban only)\",\n    x = \"School\", y = \"Count\", fill = \"Parent status\"\n  )"
  },
  {
    "objectID": "EDA-practice-ST558.html#numerical-variables",
    "href": "EDA-practice-ST558.html#numerical-variables",
    "title": "EDA practice",
    "section": "Numerical Variables",
    "text": "Numerical Variables\n\nlibrary(dplyr)\nlibrary(tidyr)\nlibrary(ggplot2)\n\nFind summaries for age,absences and G3 math.\n\ncomb_main |&gt;\n  summarise(\n    mean_age = mean(age, na.rm=TRUE), med_age = median(age, na.rm=TRUE),\n    mean_G3m = mean(G3.x, na.rm=TRUE), med_G3m = median(G3.x, na.rm=TRUE),\n    sd_abs_m = sd(absences.x, na.rm=TRUE), IQR_abs_m = IQR(absences.x, na.rm=TRUE)\n  )\n\n  mean_age med_age mean_G3m med_G3m sd_abs_m IQR_abs_m\n1   16.525      16 11.04063      11 7.835205      7.25\n\n\nRepeat the above but subset for school = GP\n\ncomb_main |&gt;\n  filter(school == \"GP\")|&gt;\n  summarise(\n    mean_age = mean(age, na.rm=TRUE), sd_age = sd(age, na.rm=TRUE),\n    median_G3_math = median(G3.x, na.rm=TRUE), IQR_G3_math = IQR(G3.x, na.rm=TRUE),\n    mean_abs_math = mean(absences.x, na.rm=TRUE), sd_abs_math = sd(absences.x, na.rm=TRUE)\n  )\n\n  mean_age   sd_age median_G3_math IQR_G3_math mean_abs_math sd_abs_math\n1 16.37979 1.099273             11           5      5.641115    8.102498\n\n\nGrouping by school\n\ncomb_main |&gt;\n  group_by(school) |&gt;\n  summarise(\n    n = n(),\n    mean_age = mean(age, na.rm=TRUE),\n    med_G3m  = median(G3.x, na.rm=TRUE),\n    sd_abs_m = sd(absences.x, na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\n# A tibble: 2 × 5\n  school     n mean_age med_G3m sd_abs_m\n  &lt;chr&gt;  &lt;int&gt;    &lt;dbl&gt;   &lt;int&gt;    &lt;dbl&gt;\n1 GP       287     16.4      11     8.10\n2 MS        33     17.8      10     4.55\n\n\nGrouped by school and sex\n\ncomb_main |&gt;\n  group_by(school, sex) |&gt;\n  summarise(\n    n = n(),\n    mean_age = mean(age, na.rm=TRUE),\n    med_G3m  = median(G3.x, na.rm=TRUE),\n    sd_abs_m = sd(absences.x, na.rm=TRUE),\n    .groups = \"drop\"\n  )\n\n# A tibble: 4 × 6\n  school sex       n mean_age med_G3m sd_abs_m\n  &lt;chr&gt;  &lt;chr&gt; &lt;int&gt;    &lt;dbl&gt;   &lt;dbl&gt;    &lt;dbl&gt;\n1 GP     F       153     16.5      11     9.80\n2 GP     M       134     16.3      12     5.55\n3 MS     F        21     17.7      10     5.04\n4 MS     M        12     18        10     3.73\n\n\nCorrelation matrix\n\nnum_df &lt;- comb_main |&gt;\n  select(age, absences.x, absences.y, G1.x, G2.x, G3.x, G1.y, G2.y, G3.y)\n\ncor_mat &lt;- cor(num_df)\ncor_mat\n\n                    age  absences.x  absences.y        G1.x        G2.x\nage         1.000000000  0.14392517  0.04733182 -0.11037935 -0.18618740\nabsences.x  0.143925170  1.00000000  0.56381559 -0.06946116 -0.07580245\nabsences.y  0.047331821  0.56381559  1.00000000 -0.08760610 -0.12636236\nG1.x       -0.110379348 -0.06946116 -0.08760610  1.00000000  0.86588796\nG2.x       -0.186187399 -0.07580245 -0.12636236  0.86588796  1.00000000\nG3.x       -0.206031862 -0.02811847 -0.11664046  0.81859418  0.91357599\nG1.y       -0.050549678 -0.09247761 -0.09864117  0.59293522  0.54300736\nG2.y        0.029366456 -0.14516402 -0.12070727  0.59517224  0.56521350\nG3.y       -0.009103257 -0.13572638 -0.07145201  0.54388734  0.49603265\n                  G3.x        G1.y        G2.y         G3.y\nage        -0.20603186 -0.05054968  0.02936646 -0.009103257\nabsences.x -0.02811847 -0.09247761 -0.14516402 -0.135726385\nabsences.y -0.11664046 -0.09864117 -0.12070727 -0.071452010\nG1.x        0.81859418  0.59293522  0.59517224  0.543887345\nG2.x        0.91357599  0.54300736  0.56521350  0.496032649\nG3.x        1.00000000  0.52288461  0.54545279  0.475956497\nG1.y        0.52288461  1.00000000  0.88415041  0.825414320\nG2.y        0.54545279  0.88415041  1.00000000  0.894309821\nG3.y        0.47595650  0.82541432  0.89430982  1.000000000\n\n\nHistogram , KDE, Boxplot\n\nggplot(comb_main, aes(G3.x, fill = school)) +\n  geom_histogram(position = \"identity\", alpha = 0.5, binwidth = 1) +\n  labs(title=\"G3 (Math) by School — Histogram\", x=\"G3 (Math)\", y=\"Count\", fill=\"School\")\n\n\n\n\n\n\n\nggplot(comb_main, aes(G3.x, color = school)) +\n  geom_density() +\n  labs(title=\"G3 (Math) by School — Density\", x=\"G3 (Math)\", y=\"Density\", color=\"School\")\n\n\n\n\n\n\n\nggplot(comb_main, aes(x = school, y = G3.x, fill = school)) +\n  geom_boxplot() +\n  labs(title=\"G3 (Math) by School — Boxplot\", x=\"School\", y=\"G3 (Math)\") +\n  guides(fill = \"none\")\n\n\n\n\n\n\n\n\nCreate 2 scatter plots\n\nggplot(comb_main, aes(x = G1.x, y = G3.x, color = school)) +\n  geom_jitter(width=.2, height=.2, alpha=.7) +\n  labs(title=\"G3 (Math) vs G1 (Math) by School\", x=\"G1 (Math)\", y=\"G3 (Math)\", color=\"School\")\n\n\n\n\n\n\n\nggplot(comb_main, aes(x = absences.x, y = G3.x, color = sex)) +\n  geom_jitter(width=.2, height=.2, alpha=.7) +\n  labs(title=\"G3 (Math) vs Absences (Math) by Sex\", x=\"Absences (Math)\", y=\"G3 (Math)\", color=\"Sex\")\n\n\n\n\n\n\n\n\nWhat it interesting here is that we see that GP has more higher achieving students than MS. faceting by school to obtain scatter graphs at each school for the G1 and G3 variables.\n\nggplot(comb_main, aes(x = G1.x, y = G3.x, color = sex)) +\n  geom_jitter(width=.2, height=.2, alpha=.7) +\n  facet_wrap(~ school) +\n  labs(title=\"G3 (Math) vs G1 (Math) — Faceted by School\", x=\"G1 (Math)\", y=\"G3 (Math)\", color=\"Sex\")\n\n\n\n\n\n\n\n\nFaceting by sex and school to see both G3 and G1 by sex and school.\n\nggplot(comb_main, aes(x = absences.x, y = G3.x, color = sex)) +\n  geom_jitter(width=.2, height=.2, alpha=.7) +\n  facet_grid(sex ~ school) +\n  labs(title=\"G3 (Math) vs Absences (Math) — by Sex & School\", x=\"Absences (Math)\", y=\"G3 (Math)\", color=\"Sex\")"
  }
]